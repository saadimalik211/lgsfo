version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lgsfo-postgres
    environment:
      POSTGRES_DB: lgsfo
      POSTGRES_USER: lgsfo_user
      POSTGRES_PASSWORD: lgsfo_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lgsfo_user -d lgsfo"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lgsfo-app
    environment:
      - DATABASE_URL=postgresql://lgsfo_user:lgsfo_password@postgres:5432/lgsfo
      - NODE_ENV=development
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

  # Traefik Reverse Proxy (optional for SSL)
  traefik:
    image: traefik:v2.10
    container_name: lgsfo-traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - app

volumes:
  postgres_data:
