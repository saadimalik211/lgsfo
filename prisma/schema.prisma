generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  phone     String?
  role      UserRole  @default(CUSTOMER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bookings  Booking[]

  @@map("users")
}

model Booking {
  id          String        @id @default(cuid())
  userId      String?
  pickup      String
  dropoff     String
  datetime    DateTime
  passengers  Int
  luggage     Int           @default(0)
  extras      Json?
  rideType    RideType      @default(STANDARD)
  distanceKm  Float?
  durationMin Int?
  priceCents  Int
  status      BookingStatus @default(PENDING)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  user        User?         @relation(fields: [userId], references: [id])
  payments    Payment[]

  @@map("bookings")
}

model Payment {
  id                      String        @id @default(cuid())
  bookingId               String
  stripePaymentId         String?
  stripePaymentIntentId   String?       // For authorization holds
  amountCents             Int
  currency                String        @default("USD")
  status                  PaymentStatus @default(REQUIRES_PAYMENT_METHOD)
  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt
  booking                 Booking       @relation(fields: [bookingId], references: [id])

  @@map("payments")
}

enum UserRole {
  CUSTOMER
  ADMIN
  DRIVER
}

enum RideType {
  STANDARD
  SUV
  LUXURY
}

enum BookingStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
}

enum PaymentStatus {
  REQUIRES_PAYMENT_METHOD
  AUTHORIZED
  SUCCEEDED
  FAILED
  REFUNDED
  CANCELLED
}
