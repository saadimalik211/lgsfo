generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  phone     String?
  role      UserRole  @default(CUSTOMER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bookings  Booking[]

  @@map("users")
}

model Booking {
  id            String        @id @default(cuid())
  userId        String?
  pickup        String
  dropoff       String
  datetime      DateTime
  passengers    Int
  luggage       Int           @default(0)
  extras        Json?
  rideType      RideType      @default(TESLA_MODEL_Y)
  distanceKm    Float?
  durationMin   Int?
  priceCents    Int
  status        BookingStatus @default(PENDING)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  customerEmail String?
  customerName  String?
  customerPhone String?
  user          User?         @relation(fields: [userId], references: [id])
  payments      Payment[]

  @@map("bookings")
}

model Payment {
  id                    String        @id @default(cuid())
  bookingId             String
  stripePaymentId       String?
  amountCents           Int
  currency              String        @default("USD")
  status                PaymentStatus @default(REQUIRES_PAYMENT_METHOD)
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  stripePaymentIntentId String?
  paymentMethod         PaymentMethod @default(STRIPE)
  booking               Booking       @relation(fields: [bookingId], references: [id])

  @@map("payments")
}

enum UserRole {
  CUSTOMER
  ADMIN
  DRIVER
}

enum RideType {
  TESLA_MODEL_Y
}

enum BookingStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
}

enum PaymentStatus {
  REQUIRES_PAYMENT_METHOD
  SUCCEEDED
  FAILED
  REFUNDED
  AUTHORIZED
  CANCELLED
}

enum PaymentMethod {
  STRIPE
  CASH
  VENMO
  ZELLE
  OTHER
}
